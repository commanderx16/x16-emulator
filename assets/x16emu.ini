[main]

; scale: 1 | 2 | 3 | 4
scale = 1

; warp: yes | no
warp = yes

; keymap: one of
;          en-us
;          en-gb
;          de
;          nordic
;          it
;          pl
;          hu
;          es
;          fr
;          de-ch
;          fr-be
;          pt-br
keymap = fr

; geos: yes | no
geos = no

; test: test ID to run
;test = 0

; echo: raw | iso
;echo = raw

; quality: nearest | linear | best
quality = best

; joy[1-4]: yes | no
joy1 = yes
joy2 = no
joy3 = no
joy4 = no

; abufs: integer
abufs = 8

; dump_[cpu | bank | ram | vram]: yes | no
dump_cpu = no
dump_ram = no
dump_bank = no
dump_vram = no

; log_[keyboard | speed | video]: yes | no
log_keyboard = no
log_speed = no
log_video = no

sdcard = sdcard.img

[dbg]
enabled = yes

; font filepath used by the debugger
font = consolas10.bmp

; window background colour
bg_color = $383838

; colour of transparent rect drawed when the mouse is over a debugger zone (data/code/stack....)
focus_color = $F0F0F0

label_color = $8080FF
data_color = $FFFFFF
highlight_color = $5dabea

; debugger debug feature to display where the mouse is
showMouseCoord = yes

; colours used on VRAM display
vram_tilemap_color = $FF0000
vram_tiledata_color = $00FF00
vram_special_color = $0000FF
vram_other_color = $FFFFFF

; breakpoints list, up t0 10
BP0 =
BP1 =
BP2 =
BP3 =
BP4 =
BP5 =
BP6 =
BP7 =
BP8 =
BP9 =

;
; [dbg_ini_script]
; list of commands to execute on launch
;
[dbg_ini_script]
; a = symload 0 kernal.sym
; b = symload 1 keymap.sym
; c = symload 2 dos.sym
; d = symload 3 geos.sym
; e = symload 4 basic.sym
; f = symload 0 user.sym

[dbg_console]

; font filepath used by the debugger console
font = lucidaconsole10.bmp

; console background colour
bg_color = $000000

; <action> = [ <modifier> :: ] <keyname>
; modifier = CTRL | SHIFT | ALT | GUI
; *GUI = special OS key (WIN | CMD formely known as APPLE ;) )
; keyname = https://web.archive.org/web/20210211164137/https://wiki.libsdl.org/SDL_Scancode
; e.g:
; control-a => CTRL :: A
; control-shift-a => CTRL :: SHIFT :: A
; command-p => GUI :: P
[key_bindings]
DBG_HOME= F1
DBG_RESET= F2
DBG_RUN= F5
DBG_SETBRK= F9
DBG_STEP= F11
DBG_STEPOVER= F10
DBG_PASTE= CTRL :: v
DBG_PAGE_NEXT= PageDown
DBG_PAGE_PREV= PageUp

